{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImage","setCurrentImage","maxImages","length","isDisabledPrev","isDisabledNext","className","style","width","transition","map","image","index","transform","src","alt","type","onClick","prev","Math","max","disabled","min","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","setInfinite","getMaxFrames","floor","htmlFor","id","value","onChange","event","Number","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f17efd9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(0); // setting images by index\n\n  const maxImages = images.length - frameSize;\n\n  const handlePrev = () => (\n    currentImage !== 0\n      ? setCurrentImage(prev => Math.max(prev - step, 0))\n      : setCurrentImage(maxImages)\n  );\n\n  const handleNext = () => (\n    currentImage !== maxImages\n      ? setCurrentImage(prev => Math.min(prev + step, maxImages))\n      : setCurrentImage(0)\n  );\n\n  const isDisabledPrev = currentImage === 0 && !infinite;\n  const isDisabledNext = currentImage === maxImages && !infinite;\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            className=\"Carousel__image\"\n            key={image}\n            style={{\n              transform: `translateX(${-(currentImage * itemWidth)}px)`,\n              transition: `transform ${animationDuration}ms ease 0s`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__btn\"\n          onClick={handlePrev}\n          disabled={isDisabledPrev}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          className=\"Carousel__btn\"\n          data-cy=\"next\"\n          onClick={handleNext}\n          disabled={isDisabledNext}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst MAX_CONTAINER_WIDTH = 1300;\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  const getMaxFrames = Math.floor(MAX_CONTAINER_WIDTH / itemWidth);\n\n  return (\n    <div className=\"App\">\n      <h1>{`Carousel with ${images.length} images`}</h1>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n\n      <label htmlFor=\"itemWidthId\" className=\"App__label\">\n        {'Item Width: '}\n        <input\n          type=\"number\"\n          id=\"itemWidthId\"\n          value={itemWidth}\n          min={130}\n          max={260}\n          step={10}\n          onChange={(event) => setItemWidth(Number(event.target.value))}\n        />\n      </label>\n\n      <label htmlFor=\"frameSizeId\" className=\"App__label\">\n        {'Frame Size: '}\n        <input\n          type=\"number\"\n          id=\"frameSizeId\"\n          value={frameSize}\n          min={1}\n          max={getMaxFrames}\n          step={1}\n          onChange={(event) => setFrameSize(Number(event.target.value))}\n        />\n      </label>\n\n      <label htmlFor=\"stepId\" className=\"App__label\">\n        {'Step: '}\n        <input\n          type=\"number\"\n          id=\"stepId\"\n          value={step}\n          min={1}\n          max={5}\n          onChange={(event) => setStep(Number(event.target.value))}\n        />\n      </label>\n\n      <label htmlFor=\"animationDurationId\" className=\"App__label\">\n        {'Animation duration: '}\n        <input\n          type=\"number\"\n          id=\"animationDurationId\"\n          value={animationDuration}\n          min={500}\n          max={5000}\n          step={500}\n          onChange={(event) => setAnimationDuration(Number(event.target.value))}\n        />\n      </label>\n\n      <label htmlFor=\"infiniteId\" className=\"App__label\">\n        {'Infinite '}\n        <input\n          type=\"checkbox\"\n          id=\"infiniteId\"\n          onChange={() => setInfinite(!infinite)}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}